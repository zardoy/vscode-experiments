{
    "name": "zardoy-experiments",
    "displayName": "Zardoy Experiments",
    "description": "Highly experimental features and commands",
    "preview": true,
    "version": "0.0.0-dev",
    "publisher": "zardoy",
    "web": true,
    "private": true,
    "license": "MIT",
    "activationEvents": [
        "onStartupFinished"
    ],
    "categories": [
        "Other"
    ],
    "contributes": {
        "commands": [
            {
                "command": "tab",
                "title": "Special Tab"
            },
            {
                "command": "openUrl",
                "title": "Open URL"
            },
            {
                "command": "addImport",
                "title": "Add Import"
            },
            {
                "command": "goToNextProblemInFile",
                "title": "Go to Next Problem in File"
            },
            {
                "command": "fixedSurroundIf",
                "title": "Surround Lines"
            },
            {
                "command": "removeUnusedImports",
                "title": "remove unused imports"
            },
            {
                "command": "problemsBySource",
                "title": "Show problems by source"
            },
            {
                "command": "nextLetterSwapCase",
                "title": "Next Letter Swap Case"
            },
            {
                "command": "fixCss",
                "title": "Fix CSS: Adopt CSS-IN-JS"
            },
            {
                "command": "insertAutoCompletions",
                "title": "Insert Auto Completions"
            },
            {
                "command": "insertCompletions",
                "title": "Insert Completions"
            },
            {
                "command": "copyLineVariableName",
                "title": "Copy Line Variable Name"
            },
            {
                "command": "reactAwareRename",
                "title": "React Aware Rename"
            },
            {
                "command": "goToMatchingTagOrPair",
                "title": "Go to Matching Tag or Pair"
            },
            {
                "command": "applyCodeaction",
                "title": "Apply Codeaction"
            },
            {
                "command": "insertTag",
                "title": "Insert Tag"
            },
            {
                "command": "fixedTerminalMaximize",
                "title": "Fixed Terminal Maximize"
            },
            {
                "command": "openFileInWebstorm",
                "title": "Open File in WebStorm"
            },
            {
                "command": "copyFileName",
                "title": "Copy File Name"
            },
            {
                "command": "fixedPaste",
                "title": "Fixed Paste"
            },
            {
                "command": "jsonAwarePaste",
                "title": "Json Aware Paste"
            },
            {
                "command": "focusLastPasteRange",
                "title": "Focus Last Paste Range"
            },
            {
                "command": "addNewLineAfterImports",
                "title": "Add New Line After Imports"
            },
            {
                "command": "previewType",
                "title": "Preview Type"
            },
            {
                "command": "openRepositoryOfActiveExtension",
                "title": "Open Repository of Active Extension"
            },
            {
                "command": "copyCurrentWorkspacePath",
                "title": "Copy Current Workspace Path"
            },
            {
                "command": "ensureGitUser",
                "title": "Ensure Git User"
            },
            {
                "command": "insertComma",
                "title": "Insert Comma to the End of Line"
            },
            {
                "command": "copyProductIconName",
                "title": "Copy Product Icon Name (Codicons)"
            },
            {
                "command": "selectLineContents",
                "title": "Select Line Contents"
            },
            {
                "command": "cutLineContents",
                "title": "Cut Line Contents"
            },
            {
                "command": "cutLineContentsPreserve",
                "title": "Cut Line Contents and Preserve Line"
            },
            {
                "command": "renameVariableParts",
                "title": "Rename Variable Parts"
            },
            {
                "command": "renameVariablePartsAccept",
                "title": "Rename Variable Parts Accept Renaming"
            },
            {
                "command": "renameVariablePartsAcceptReplace",
                "title": "Rename Variable Parts Accept Without Using Rename Provider"
            },
            {
                "command": "renameVariablePartsDeletePart",
                "title": "Rename Variable Parts Delete Part"
            },
            {
                "command": "renameVariablePartsExtractPart",
                "title": "Rename Variable Parts Extract Part"
            },
            {
                "command": "renameVariablePartsLowercasePart",
                "title": "Rename Variable Parts Lowercase Part"
            },
            {
                "command": "renameVariablePartsPartMoveDown",
                "title": "Rename Variable Parts Part Move Down"
            },
            {
                "command": "renameVariablePartsPartMoveUp",
                "title": "Rename Variable Parts Part Move Up"
            },
            {
                "command": "printActiveDocumrntUri",
                "title": "Print Active Documrnt URI"
            },
            {
                "command": "expandTag",
                "title": "Expand Tag"
            },
            {
                "command": "focusTabByNumber",
                "title": "Focus Tab by Number"
            },
            {
                "command": "generateKeybindingsForTabsWithNumbers",
                "title": "Generate Keybindings for Tabs with Numbers"
            },
            {
                "command": "gitNextChange",
                "title": "Git Next Change"
            },
            {
                "command": "gitPreviousChange",
                "title": "Git Previous Change"
            },
            {
                "command": "turnCommentIntoJsdoc",
                "title": "Turn Comment Into Jsdoc"
            },
            {
                "command": "applyCreatedCodeTransformers",
                "title": "Apply Created Code Transformers"
            },
            {
                "command": "newTerminalWithSameCwd",
                "title": "New Terminal with Same Cwd"
            },
            {
                "command": "toggleExtHostOutput",
                "title": "Toggle Extension Host Output"
            },
            {
                "command": "openCompletionKindPlayground",
                "title": "Open Completion Kind Playground"
            },
            {
                "command": "gitStageFiles",
                "title": "Git Stage Files..."
            },
            {
                "command": "gitUnstageFiles",
                "title": "Git Unstage Files..."
            },
            {
                "command": "gitRevertFiles",
                "title": "Git Revert Files..."
            },
            {
                "command": "openGithubEnvTerminal",
                "title": "Open GitHub Env Terminal"
            },
            {
                "command": "insertFileName",
                "title": "Insert File Name"
            },
            {
                "command": "goToHighlightedLocations",
                "title": "Go to Highlighted Locations"
            },
            {
                "command": "insertTypeDecoration",
                "title": "Insert Type Decoration"
            },
            {
                "command": "openReferencesInView",
                "title": "Open References in View"
            },
            {
                "command": "generateGitlabPush",
                "title": "Generate push with gitlab options"
            },
            {
                "command": "generateGitlabPushAccept",
                "title": "Accept created push sequence"
            },
            {
                "command": "inspectCompletionsDetails",
                "title": "Inspect Completions Details"
            },
            {
                "command": "inspectCompletionsDetailsRaw",
                "title": "Inspect Completions Details in Raw Editor"
            },
            {
                "command": "renameFileParts",
                "title": "Rename File Parts"
            },
            {
                "command": "peekTextSearchDefinitions",
                "title": "Peek TextSearch Definitions"
            },
            {
                "command": "discardAndCloseAllUntitled",
                "title": "Discard and Close All Untitled"
            },
            {
                "command": "openOriginalFileFromDiff",
                "title": "Open Original File From Diff"
            },
            {
                "command": "copyWorkspaceName",
                "title": "Copy Workspace Name"
            },
            {
                "command": "goToReferences",
                "title": "Go to References"
            }
        ],
        "configuration": {
            "properties": {
                "enableDebug": {
                    "type": "boolean",
                    "default": false
                },
                "features.preserveCamelCase": {
                    "type": "boolean",
                    "default": true
                },
                "features.tsCodeActions": {
                    "type": "boolean",
                    "default": true
                },
                "features.regexCodeActions": {
                    "type": "boolean",
                    "default": true
                },
                "features.missingVscodeImportCodeAction": {
                    "type": "boolean",
                    "default": true
                },
                "features.statusBarDiagnostic": {
                    "type": "string",
                    "enum": [
                        "disabled",
                        "color",
                        "bgColor"
                    ],
                    "default": "color"
                },
                "features.autoAlignImport": {
                    "type": "boolean",
                    "description": "Add newline after last import statement in JS/ST",
                    "default": true
                },
                "features.onTypeTsFormatter": {
                    "type": "boolean",
                    "default": true
                },
                "features.signatureCompletions": {
                    "type": "boolean",
                    "default": true
                },
                "features.suggestImportName": {
                    "type": "boolean",
                    "default": true
                },
                "signatureCompletions.useTypeOnValue": {
                    "type": "string",
                    "default": "value, item"
                },
                "signatureCompletions.usePlaceholder": {
                    "type": "boolean",
                    "description": "Use snippet with placeholders instead of just text",
                    "default": false
                },
                "signatureCompletions.enableLanguages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "typescript",
                        "javascript",
                        "typescriptreact",
                        "javascriptreact",
                        "vue"
                    ]
                },
                "features.triggerParameterHintsOnSignatureCompletions": {
                    "type": "boolean",
                    "default": true
                },
                "features.jsxAutoCloseTag": {
                    "type": "boolean",
                    "default": true
                },
                "typeDecorations.enable": {
                    "type": "boolean",
                    "default": true
                },
                "typeDecorations.ignoreValues": {
                    "type": "array",
                    "uniqueItems": true,
                    "markdownDescription": "Ignore specific resolved values from type decorations. In future it can be regex if starts & ends with `/`. Examples can be: `any`, `unknown`",
                    "items": {
                        "type": "string"
                    }
                },
                "typeDecorations.enableInStyles": {
                    "type": "boolean",
                    "default": false
                },
                "autoRemoveSemicolon.enable": {
                    "type": "boolean",
                    "default": true
                },
                "typeDecorations.languages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "*"
                    ]
                },
                "goToNextProblemInFile.triggerCodeAction": {
                    "type": "string",
                    "enum": [
                        "disabled",
                        "ifAppliable",
                        "always"
                    ],
                    "default": "ifAppliable"
                },
                "tweakTsSuggestions.enabled": {
                    "type": "boolean",
                    "default": false
                },
                "tweakTsSuggestions.arrayItemTabstop": {
                    "type": "boolean",
                    "default": true
                },
                "tweakTsSuggestions.expandMethodBeforeCurly": {
                    "description": "Whether to expand method with function before existing curly. You can safely enable it as you can still select wether to use patched version or original one",
                    "type": "boolean",
                    "default": false
                },
                "ensureGitUser": {
                    "type": "object",
                    "additionalItems": {
                        "type": "string"
                    },
                    "description": "Map folder glob - expected user in format: 'name <email>'"
                },
                "dontLeaveEmptyLines": {
                    "type": "boolean",
                    "default": true,
                    "description": "Also remove surrounding empty newlines. For `cutLineContents` command"
                },
                "features.autoExpandTag": {
                    "type": "boolean",
                    "markdownDescription": "Type space after `/` in `<div />` to expand the tag. Doesn't support React for now",
                    "default": true
                },
                "features.showTabNumbers": {
                    "type": "string",
                    "markdownDescription": "Mode of `tabsWithNumbers` feature! Primarily for `focusTabByNumber` command",
                    "enum": [
                        "disabled",
                        "fromLeft",
                        "recentlyFocused",
                        "recentlyOpened"
                    ],
                    "default": "disabled"
                },
                "showTabNumbers.reversedMode": {
                    "type": "boolean",
                    "description": "Display numbers on tabs in reversed mode. Doesn't affect fromLeft mode",
                    "default": false
                },
                "createdCodeTransformers": {
                    "type": "object",
                    "description": "Will be moved to code actions (transformers) creator"
                },
                "autoEscapeQuoteJson": {
                    "type": "boolean",
                    "default": true
                },
                "goToFileJson": {
                    "type": "string",
                    "description": "Wether to enable definition provider for path-like strings in JSON",
                    "enum": [
                        "always",
                        "onlyIfExists",
                        "never"
                    ],
                    "default": "onlyIfExists"
                },
                "autoRenameJsxTag": {
                    "type": "boolean",
                    "description": "Modern alternative to auto rename tag that uses native linked editing. Benefit: you cancel auto-renaming with esc at any time",
                    "default": false
                },
                "autoIndentEmptyLine": {
                    "type": "string",
                    "enum": [
                        "disabled",
                        "mouse-only",
                        "always"
                    ],
                    "default": "disabled"
                },
                "autoIndentEmptyLineIfNotDirty": {
                    "type": "boolean",
                    "description": "Experimental, might be removed. This is can be useful to not spam with unsaved files in your editor tabs",
                    "default": false
                },
                "enableExperimentalIntegrationsWithTsPlugin": {
                    "type": "boolean",
                    "description": "Wether to enable experimental integrations with `ts-essential-plugins`",
                    "default": false
                },
                "typescriptHighlightedKeywordReferences": {
                    "type": "boolean",
                    "description": "Wether to references on highlighted JS keywords in vue/javascript/typescript/html",
                    "default": true
                },
                "statusbarOccurrencesCount": {
                    "type": "boolean",
                    "description": "Wether to display statusbar with all occurences count (including selected) in the following format: E (case matching occurences)",
                    "default": false
                },
                "inspectCompletionsDetails.resolveItems": {
                    "type": "number",
                    "description": "Number of completions to resolve (too large numbers slow down completions)",
                    "default": 1000
                },
                "inspectCompletionsDetails.includeCompletionData": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "default": []
                },
                "inspectCompletionsDetails.openLocation": {
                    "type": "string",
                    "enum": [
                        "toSide",
                        "newTab"
                    ],
                    "default": "toSide"
                },
                "generateGitlabPush": {
                    "type": "object",
                    "description": "Generate `git push` with gitlab specific options",
                    "properties": {
                        "dynamicPushOptions": {
                            "type": "object",
                            "properties": {
                                "merge_request.target": {
                                    "type": "string"
                                },
                                "merge_request.title": {
                                    "type": "string",
                                    "default": ""
                                },
                                "merge_request.description": {
                                    "type": "string",
                                    "default": ""
                                },
                                "merge_request.milestone": {
                                    "type": "string",
                                    "default": ""
                                },
                                "merge_request.label": {
                                    "type": "string",
                                    "default": ""
                                },
                                "merge_request.unlabel": {
                                    "type": "string",
                                    "default": ""
                                },
                                "merge_request.assign": {
                                    "type": "string",
                                    "default": ""
                                },
                                "merge_request.unassign": {
                                    "type": "string",
                                    "default": ""
                                }
                            }
                        },
                        "staticPushOptions": {
                            "type": "object",
                            "properties": {
                                "merge_request.create": {
                                    "type": "boolean",
                                    "default": false
                                },
                                "merge_request.merge_when_pipeline_succeeds": {
                                    "type": "boolean",
                                    "default": false
                                },
                                "merge_request.remove_source_branch": {
                                    "type": "boolean",
                                    "default": false
                                },
                                "merge_request.draft": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "menus": {
            "commandPalette": [
                {
                    "command": "applyCodeaction",
                    "when": "false"
                },
                {
                    "command": "focusTabByNumber",
                    "when": "false"
                },
                {
                    "command": "renameVariablePartsAccept",
                    "when": "false"
                },
                {
                    "command": "renameVariablePartsAcceptReplace",
                    "when": "false"
                },
                {
                    "command": "renameVariablePartsDeletePart",
                    "when": "false"
                },
                {
                    "command": "renameVariablePartsExtractPart",
                    "when": "false"
                },
                {
                    "command": "renameVariablePartsLowercasePart",
                    "when": "false"
                },
                {
                    "command": "renameVariablePartsPartMoveUp",
                    "when": "false"
                },
                {
                    "command": "renameVariablePartsPartMoveDown",
                    "when": "false"
                },
                {
                    "command": "generateGitlabPushAccept",
                    "when": "false"
                }
            ]
        },
        "keybindings": [
            {
                "command": "zardoyExperiments.renameVariablePartsAccept",
                "key": "ctrl+o",
                "mac": "cmd+o",
                "when": "zardoyExperiments.renameVariablePartsOpened"
            },
            {
                "command": "zardoyExperiments.renameVariablePartsAcceptReplace",
                "key": "ctrl+p",
                "mac": "cmd+p",
                "when": "zardoyExperiments.renameVariablePartsOpened"
            },
            {
                "command": "zardoyExperiments.renameVariablePartsDeletePart",
                "key": "ctrl+d",
                "mac": "cmd+d",
                "when": "zardoyExperiments.renameVariablePartsOpened"
            },
            {
                "command": "zardoyExperiments.renameVariablePartsExtractPart",
                "key": "ctrl+e",
                "mac": "cmd+e",
                "when": "zardoyExperiments.renameVariablePartsOpened"
            },
            {
                "command": "zardoyExperiments.renameVariablePartsLowercasePart",
                "key": "ctrl+l",
                "mac": "cmd+l",
                "when": "zardoyExperiments.renameVariablePartsOpened"
            },
            {
                "command": "zardoyExperiments.renameVariablePartsPartMoveUp",
                "key": "ctrl+alt+i",
                "mac": "cmd+shift+i",
                "when": "zardoyExperiments.renameVariablePartsOpened"
            },
            {
                "command": "zardoyExperiments.renameVariablePartsPartMoveDown",
                "key": "ctrl+alt+k",
                "mac": "cmd+shift+k",
                "when": "zardoyExperiments.renameVariablePartsOpened"
            },
            {
                "command": "zardoyExperiments.generateGitlabPushAccept",
                "key": "ctrl+o",
                "mac": "cmd+o",
                "when": "zardoyExperiments.generateGitlabPushOpened"
            }
        ]
    },
    "scripts": {
        "start": "vscode-framework start",
        "build": "vscode-framework build",
        "lint": "eslint src/**"
    },
    "pnpm": {
        "overrides": {
            "esbuild": "^0.14.10"
        }
    },
    "dependencies": {
        "@types/hosted-git-info": "^3.0.2",
        "@types/ini": "^1.3.31",
        "@types/minimatch": "^3.0.5",
        "@types/pluralize": "^0.0.29",
        "@zardoy/utils": "^0.0.9",
        "@zardoy/vscode-utils": "^0.0.47",
        "change-case": "^4.1.2",
        "escape-string-regexp": "^5.0.0",
        "execa": "^6.1.0",
        "hosted-git-info": "^4.1.0",
        "ini": "^2.0.0",
        "jsonc-parser": "^3.2.0",
        "lodash": "^4.17.21",
        "lower-case-first": "^2.0.2",
        "markdown-to-txt": "^2.0.1",
        "minimatch": "^5.0.1",
        "open": "^8.4.0",
        "path-browserify": "^1.0.1",
        "pid-cwd": "^1.2.0",
        "pluralize": "github:plurals/pluralize",
        "rambda": "^6.9.0",
        "remark": "^14.0.2",
        "string-dedent": "^3.0.1",
        "untildify": "^4.0.0",
        "valtio": "^1.6.4",
        "vscode-framework": "^0.0.18",
        "vscode-uri": "^3.0.6"
    },
    "devDependencies": {
        "@types/lodash": "^4.14.190",
        "@types/node": "^16.11.26",
        "@types/vscode": "^1.66.0",
        "@zardoy/tsconfig": "^1.4.0",
        "eslint": "^8.11.0",
        "eslint-config-zardoy": "^0.2.11",
        "typescript": "^4.6.2"
    },
    "prettier": {
        "semi": false,
        "singleQuote": true,
        "proseWrap": "never",
        "tabWidth": 4,
        "trailingComma": "all",
        "arrowParens": "avoid",
        "printWidth": 160
    }
}
