{
    "name": "zardoy-experiments",
    "displayName": "Zardoy Experiments",
    "description": "Highly experimental features and commands",
    "preview": true,
    "version": "0.0.0-dev",
    "publisher": "zardoy",
    "web": true,
    "private": true,
    "license": "MIT",
    "activationEvents": [
        "onStartupFinished"
    ],
    "categories": [
        "Other"
    ],
    "contributes": {
        "commands": [
            {
                "command": "tab",
                "title": "Special Tab"
            },
            {
                "command": "openUrl",
                "title": "Open URL"
            },
            {
                "command": "addImport",
                "title": "Add Import"
            },
            {
                "command": "goToNextProblemInFile",
                "title": "Go to Next Problem in File"
            },
            {
                "command": "fixedSurroundIf",
                "title": "Surround Lines"
            },
            {
                "command": "removeUnusedImports",
                "title": "remove unused imports"
            },
            {
                "command": "problemsBySource",
                "title": "Show problems by source"
            },
            {
                "command": "nextLetterSwapCase",
                "title": "Next Letter Swap Case"
            },
            {
                "command": "fixCss",
                "title": "Fix CSS: Adopt CSS-IN-JS"
            },
            {
                "command": "insertAutoCompletions",
                "title": "Insert Auto Completions"
            },
            {
                "command": "insertCompletions",
                "title": "Insert Completions"
            },
            {
                "command": "copyLineVariableName",
                "title": "Copy Line Variable Name"
            },
            {
                "command": "reactAwareRename",
                "title": "React Aware Rename"
            },
            {
                "command": "goToMatchingTagOrPair",
                "title": "Go to Matching Tag or Pair"
            },
            {
                "command": "applyCodeaction",
                "title": "Apply Codeaction"
            },
            {
                "command": "insertTag",
                "title": "Insert Tag"
            },
            {
                "command": "fixedTerminalMaximize",
                "title": "Fixed Terminal Maximize"
            },
            {
                "command": "openFileInWebstorm",
                "title": "Open File in WebStorm"
            },
            {
                "command": "copyFileName",
                "title": "Copy File Name"
            },
            {
                "command": "fixedPaste",
                "title": "Fixed Paste"
            },
            {
                "command": "jsonAwarePaste",
                "title": "Json Aware Paste"
            },
            {
                "command": "focusLastPasteRange",
                "title": "Focus Last Paste Range"
            },
            {
                "command": "addNewLineAfterImports",
                "title": "Add New Line After Imports"
            },
            {
                "command": "previewType",
                "title": "Preview Type"
            },
            {
                "command": "openRepositoryOfActiveExtension",
                "title": "Open Repository of Active Extension"
            }
        ],
        "configuration": [
            {
                "properties": {
                    "enableDebug": {
                        "type": "boolean",
                        "default": false
                    },
                    "features.preserveCamelCase": {
                        "type": "boolean",
                        "default": true
                    },
                    "features.tsCodeActions": {
                        "type": "boolean",
                        "default": true
                    },
                    "features.regexCodeActions": {
                        "type": "boolean",
                        "default": true
                    },
                    "features.missingVscodeImportCodeAction": {
                        "type": "boolean",
                        "default": true
                    },
                    "features.statusBarDiagnostic": {
                        "type": "string",
                        "enum": [
                            "disabled",
                            "color",
                            "bgColor"
                        ],
                        "default": "color"
                    },
                    "features.autoAlignImport": {
                        "type": "boolean",
                        "description": "Add newline after last import statement in JS/ST",
                        "default": true
                    },
                    "features.onTypeTsFormatter": {
                        "type": "boolean",
                        "default": true
                    },
                    "features.signatureCompletions": {
                        "type": "boolean",
                        "default": true
                    },
                    "signatureCompletions.useTypeOnValue": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "default": [
                            "value",
                            "item"
                        ]
                    },
                    "signatureCompletions.enableLanguages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "default": [
                            "typescript",
                            "javascript",
                            "typescriptreact",
                            "javascriptreact"
                        ]
                    },
                    "signatureCompletions.replaceValue": {
                        "description": "Define type-value to replace map",
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "default": {
                            "string": "str",
                            "number": "num"
                        }
                    },
                    "features.triggerParameterHintsOnSignatureCompletions": {
                        "type": "boolean",
                        "default": true
                    },
                    "features.jsxAutoCloseTag": {
                        "type": "boolean",
                        "default": true
                    },
                    "goToNextProblemInFile.triggerCodeAction": {
                        "type": "string",
                        "enum": [
                            "disabled",
                            "ifAppliable",
                            "always"
                        ],
                        "default": "ifAppliable"
                    }
                }
            }
        ],
        "menus": {
            "commandPalette": [
                {
                    "command": "applyCodeaction",
                    "when": "false"
                }
            ]
        }
    },
    "scripts": {
        "start": "vscode-framework start",
        "build": "vscode-framework build"
    },
    "pnpm": {
        "overrides": {
            "esbuild": "^0.14.10"
        }
    },
    "dependencies": {
        "@types/hosted-git-info": "^3.0.2",
        "@zardoy/utils": "^0.0.4",
        "change-case": "^4.1.2",
        "execa": "^6.0.0",
        "hosted-git-info": "^4.1.0",
        "lower-case-first": "^2.0.2",
        "open": "^8.4.0",
        "path-browserify": "^1.0.1",
        "rambda": "^6.9.0",
        "vscode-framework": "^0.0.18"
    },
    "devDependencies": {
        "@types/node": "^16.11.19",
        "@types/vscode": "^1.63.1",
        "@zardoy/tsconfig": "^1.2.2",
        "eslint": "^8.6.0",
        "eslint-config-zardoy": "^0.2.7",
        "type-fest": "^2.12.0",
        "typescript": "^4.5.4"
    }
}
